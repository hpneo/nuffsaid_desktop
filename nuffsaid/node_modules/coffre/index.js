var Inflecta = require('inflecta'),
    fs = require('fs'),
    path = require('path');

var Coffre = {
  mappedModels: {}
};

function runMigration(file) {
  var migrationFile = require(path.resolve('migrations/' + file)),
      migration = new Migration(file.split('_')[0]);

  migrationFile.up(migration);
  var promise = migration.run();

  return promise;
};

Coffre.getDatabase = function() {
  if (this.database === null || this.database === undefined) {
    this.database = global.window.openDatabase('nuff_said', '1.0', 'Nuff Said database', 5 * 1024 * 1024);
  }

  return this.database;
};

Coffre.init = function() {
  var result;

  if (fs.existsSync('migrations')) {
    result = new global.window.Promise(function(resolve, reject) {
      fs.readdir('migrations', function(error, files) {
        if (error !== null) {
          reject(error);
        }
        else {
          result = global.window.Promise.resolve();
          files.forEach(function(file, index, array) {
            result = result.then(function() {
              return runMigration(file);
            }, function(error) {
              reject(error);
            });
          });

          result.then(function() {
            resolve(global.window.localStorage.getItem('migrations:version'));
          });
        }
      });
    });
  }
  return result;
};

Coffre.defineModel = function(modelName) {
  var newModel = function(attributes) {
    this.attributes = {};

    for (var i in attributes) {
      this.attributes[i] = attributes[i];
    }
  };

  newModel.tableName = Inflecta.tableize(modelName);

  Coffre.mappedModels[newModel.tableName] = newModel;

  var schema = JSON.parse(global.window.localStorage.getItem('schema:' + tableName));

  schema.forEach(function(column) {
    Object.defineProperty(newModel.prototype, column['name'], {
      configurable: false,
      enumerable: true,
      get: function() {
        return this.attributes[column['name']];
      },
      set: function(value) {
        this.attributes[column['name']] = value;
      }
    });
  });

  return newModel;
};

module.exports = Coffre;
var Migration = require('./migration');