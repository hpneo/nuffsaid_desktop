var Coffre = require('./index'),
    Statements = require('./statements');

var Migration = function(version) {
  this.version = version;
  this.operations = [];
};

Migration.prototype.createTable = function(tableName, columns, tableOptions) {
  console.log('Creating table:', tableName);
  this.operations.push(Statements.createTable(tableName, columns, tableOptions));
};

Migration.prototype.dropTable = function(tableName, columns) {
  console.log('Dropping table:', tableName);
  this.operations.push(Statements.dropTable(tableName, columns));
};

Migration.prototype.run = function() {
  var operations = this.operations,
      version = this.version,
      promise = new global.window.Promise(function(resolve, reject) {
        Coffre.getDatabase().transaction(function(transaction) {
          operations.forEach(function(operation, index) {
            console.log('Running:', operation);
            transaction.executeSql(operation, [], function() {
              if (index === operations.length - 1) {
                global.window.localStorage.setItem('migrations:version', version);
                resolve(operations);
              }
            }, function(tx, error) {
              reject(error);
            });
          });
        });
      });

  return promise;
};

module.exports = Migration;