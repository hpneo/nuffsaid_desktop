var Coffre = require('./index'),
    Sql = require('sql'),
    SQL = new Sql.Sql('sqlite');

var Persistence = {
  staticMethods: {},
  instanceMethods: {}
};

Persistence.staticMethods.create = function(modelAttributes) {
  var newRecord = new this(modelAttributes);

  return newRecord.save();
};

Persistence.instanceMethods.save = function() {
  var table = SQL.define({
    name: this.constructor.tableName,
    columns: this.constructor.attributes
  });

  var self = this,
      argumentsForQuery = [];

  this.constructor.attributes.forEach(function(attribute) {
    argumentsForQuery.push(table[attribute].value(self[attribute]));
  });

  var query = table.insert.apply(table, argumentsForQuery).toQuery();

  var promise = new global.window.Promise(function(resolve, reject) {
    Coffre.getDatabase().transaction(function(transaction) {
      transaction.executeSql(query.text, query.values, function(transaction, results) {
        resolve(results.rows);
      }, function(transaction, error) {
        reject(error);
      });
    });
  });

  return promise;
};

module.exports = Persistence;